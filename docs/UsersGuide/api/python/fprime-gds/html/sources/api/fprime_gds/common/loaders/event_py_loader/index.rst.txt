:mod:`fprime_gds.common.loaders.event_py_loader`
================================================

.. py:module:: fprime_gds.common.loaders.event_py_loader

.. autoapi-nested-parse::

   @brief Loader class for importing python based event dictionaries

   @date Created July 3, 2018
   @author R. Joseph Paetz

   @bug No known bugs



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   fprime_gds.common.loaders.event_py_loader.EventPyLoader



.. py:class:: EventPyLoader

   Bases: :class:`fprime_gds.common.loaders.python_loader.PythonLoader`

   Class to load python based event dictionaries

   .. attribute:: ID_FIELD
      :annotation: = ID

      

   .. attribute:: NAME_FIELD
      :annotation: = NAME

      

   .. attribute:: COMP_FIELD
      :annotation: = COMPONENT

      

   .. attribute:: SEVERITY_FIELD
      :annotation: = SEVERITY

      

   .. attribute:: FMT_STR_FIELD
      :annotation: = FORMAT_STRING

      

   .. attribute:: DESC_FIELD
      :annotation: = EVENT_DESCRIPTION

      

   .. attribute:: ARGS_FIELD
      :annotation: = ARGUMENTS

      

   .. method:: construct_dicts(self, path)


      Constructs and returns python dictionaries keyed on id and name

      This function should not be called directly, instead use
      get_id_dict(path) and get_name_dict(path)

      :param path: Path to the python module file dictionary to convert. This
                   should be a directory. If using a regular fprime deployment,
                   this should be a path to the events dictionary in your
                   generated folder:
                   ${GENERATED_FOLDER_LOCATION}/generated/${DEPLOYMENT}/events

      :returns: (id_dict, name_dict). The keys should be the events' id and name
                fields respectively and the values should be EventTemplate
                objects.
      :rtype: A tuple with two event dictionaries (python type dict)



