:mod:`fprime_gds.common.decoders.event_decoder`
===============================================

.. py:module:: fprime_gds.common.decoders.event_decoder

.. autoapi-nested-parse::

   @brief Decoder for event data

   This decoder takes in serialized events, parses them, and packages the results
   in event_data objects.

   Example data structure:
       +-------------------+---------------------+---------------------- - - -
       | ID (4 bytes)      | Time Tag (11 bytes) | Event argument data....
       +-------------------+---------------------+---------------------- - - -

   @date Created June 29, 2018
   @author R. Joseph Paetz

   @bug No known bugs



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   fprime_gds.common.decoders.event_decoder.EventDecoder



.. py:class:: EventDecoder(event_dict)

   Bases: :class:`fprime_gds.common.decoders.decoder.Decoder`

   Decoder class for event data

   .. method:: decode_api(self, data)


      Decodes the given data and returns the result.

      This function allows for non-registered code to call the same decoding
      code as is used to parse data passed to the data_callback function.

      :param data: Binary data to decode

      :returns: Parsed version of the event data in the form of a EventData object
                or None if the data is not decodable


   .. method:: decode_args(self, arg_data, offset, template)


      Decodes the serialized event arguments

      The event arguments are each serialized and then appended to each other.
      Parse that section of the data into the individual arguments.

      :param arg_data: Serialized argument data to parse
      :param offset: Offset into the arg_data where parsing should start
      :param template: EventTemplate object that describes the type of event the
                       arg_data goes to.

      :returns: Parsed arguments in a tuple (order the same as they were parsed in).
                Each element in the tuple is an instance of the same class as the
                corresponding arg_type object in the template parameter. Returns
                none if the arguments can't be parsed



