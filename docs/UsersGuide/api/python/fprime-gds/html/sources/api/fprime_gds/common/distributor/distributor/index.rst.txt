:mod:`fprime_gds.common.distributor.distributor`
================================================

.. py:module:: fprime_gds.common.distributor.distributor

.. autoapi-nested-parse::

   @brief Class to parse raw messages and distribute them to registered objects

   This class allows for other objects (namely Decoders) to register to receive
   data messages of a given descriptor type. The data message with the length and
   descriptor header will be passed on to the registered objects.

   @date Created June 2018
   @date Modified August 2, 2018

   @author Josef Biberstein
   @author Joseph Paetz

   @bug No known bugs



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   fprime_gds.common.distributor.distributor.Distributor



.. py:class:: Distributor(config=None)

   A distributor contains a socket client that connects to a ThreadedTCPServer.
   It then sends and recvs data from a FPrime deployment.
   Decoders can register with a distributor to recv packets of data of a certain description.

   .. method:: register(self, typeof, obj)


      Register a decoder with the distributor

      :param typeof {string} -- The name of the data descriptor that the decoder will decode:
      :param obj {decoder} -- The decoder object that will process the data:


   .. method:: parse_into_raw_msgs_api(self, data)


      Parse the given data into raw messages.

      Raw messages include a length and descriptor header in front of the
      message data.

      :param data: Binary data to parse. First byte of data should be
                   the first byte of a valid raw message.
      :type data: bytearray

      :returns: (leftover_data, [raw_msg1, raw_msg2, ..., raw_msgN])
                Where leftover_data is a bytearray of anything at the end of data
                that could not be parsed (due to insufficient length).


   .. method:: parse_raw_msg_api(self, raw_msg)


      Parse the given raw message into its component parts

      :param raw_msg: Raw message to parse. Must be a valid raw msg
      :type raw_msg: bytearray

      :returns: (length, descriptor, msg). length is type int. Descriptor is
                type int. Msg is a bytearray.
      :rtype: Tuple


   .. method:: on_recv(self, data)


      Called by the internal socket client when data is recved from the socket
      client.

      :param data {binary} -- the data recved from the socket client. May contain: more than one message.



