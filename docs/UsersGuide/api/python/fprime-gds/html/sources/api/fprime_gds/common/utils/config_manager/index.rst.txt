:mod:`fprime_gds.common.utils.config_manager`
=============================================

.. py:module:: fprime_gds.common.utils.config_manager

.. autoapi-nested-parse::

   @brief Utility class to read config files and provide configuration values

   After the first instance of this class is initialized, any class can obtain
   the same instance by calling the static getInstance function. This allows any
   part of the python program retrieve configuration data.

   Based on the ConfigManager class written by Len Reder in the fprime Gse

   @author R. Joseph Paetz

   @date Created July 25, 2018

   @lisence Copyright 2018, California Institute of Technology.
            ALL RIGHTS RESERVED. U.S. Government Sponsorship acknowledged.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   fprime_gds.common.utils.config_manager.ConfigManager



.. py:exception:: ConfigBadTypeException(config_name, type_str)

   Bases: :class:`Exception`

   Common base class for all non-exit exceptions.


.. py:class:: ConfigManager

   Bases: :class:`configparser.ConfigParser`

   This class provides a single entrypoint for all configurable properties,

   .. attribute:: __instance
      

      

   .. attribute:: __prop
      

      

   .. method:: set_configs(self, f)


      Sets the configuration values to those in the given file

      Will raise an exception if the file does not exist.

      :param f: Path to a file object to read
      :type f: string


   .. method:: get_instance()
      :staticmethod:


      Return instance of singleton.

      :returns: The current ConfigManager object for this python application


   .. method:: get_type(self, name)


      Retrieve a type from the config file for parsing

      It is assumed the setting is in the types section

      :param name: Name of the type to retrieve
      :type name: string

      :returns: If the name is valid, returns an object of a type derived from
                TypeBase. Otherwise, raises ConfigBadTypeException


   .. method:: get_file_path(self)


      Return file loaded for this configuration

      :return: file path


   .. method:: _set_defaults(self)


      Used by the constructor to set all ConfigParser defaults

      Establishes a dictionary of sections and then a dictionary of keyword,
      value association for each section.


   .. method:: _set_section_defaults(self, section)


      For a section set up the default values.

      :param section: Section to set all the defaults config values for



