:mod:`fprime_gds.flask.components`
==================================

.. py:module:: fprime_gds.flask.components

.. autoapi-nested-parse::

   flask/components.py:

   This sets up the primary data components that allow Flask to connect into the system. This is where the standard
   pipeline and other components are created to interact with Flask.



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   fprime_gds.flask.components.setup_pipelined_components
   fprime_gds.flask.components.get_pipelined_components


.. data:: __PIPELINE
   

   

.. function:: setup_pipelined_components(debug, logger, config, dictionary, down_store, log_dir, tts_address, tts_port)

   Setup the standard pipeline and related components. This is done once, and then the resulting singletons are
   returned so that one object is used throughout the system.

   :param logger: logger to use for output
   :param config: GDS configuration
   :param dictionary: path to F prime dictionary
   :param log_dir: log directory to write logs to, and serve logs from
   :param tts_address: address to the middleware layer
   :param tts_port: port of the middleware layer
   :return: F prime pipeline


.. function:: get_pipelined_components()

   Returns the setup pipelined components, or raises exception if not setup yet.

   :return: F prime pipeline


