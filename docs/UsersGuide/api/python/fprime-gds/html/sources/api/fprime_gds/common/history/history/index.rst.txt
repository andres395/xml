:mod:`fprime_gds.common.history.history`
========================================

.. py:module:: fprime_gds.common.history.history

.. autoapi-nested-parse::

   history.py:

   An ordered history that defines what interfaces a history should have within the GDS

   :author: koran



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   fprime_gds.common.history.history.History



.. py:class:: History

   Bases: :class:`fprime_gds.common.handlers.DataHandler`

   An ordered history to support the GDS. Histories are intended to be registered with decoders in
   order to handle incoming objects and store them for retrieval. The default behavior of a
   history is to maintain objects in the order they were enqueued. However, should a sub-history
   want to maintain a different order, this should be made clear to the user and still support the
   calls in this History class.

   .. method:: retrieve(self, start=None)
      :abstractmethod:


      Retrieve objects from this history. If a starting point is specified, will return a
      sub-list of all objects beginning at starting point in the order to the latest object.

      :param start: a position in the history's order. Start should always be able to be specified
                    by an index (int).

      :returns: an ordered list of objects


   .. method:: retrieve_new(self)
      :abstractmethod:


      Retrieves an ordered list of objects that have been enqueued since the last call to
      retrieve or retrieve_new.

      :returns: an ordered list of objects


   .. method:: clear(self, start=None)
      :abstractmethod:


      Clears objects from history. A clear that specifies a starting point will clear the history
      such that start becomes the earliest (with respect to the history's order) element in the
      history after objects are removed.

      :param start: a position in the history's order. Start should always be able to be specified
                    by an index (int).


   .. method:: size(self)
      :abstractmethod:


      Accessor for the number of objects in the history
      :returns: the number of objects (int)



