:mod:`fprime_gds.wxgui.src.GDSMainFrameImpl`
============================================

.. py:module:: fprime_gds.wxgui.src.GDSMainFrameImpl


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   fprime_gds.wxgui.src.GDSMainFrameImpl.MainFrameImpl
   fprime_gds.wxgui.src.GDSMainFrameImpl.GDSStatusBar



.. py:class:: MainFrameImpl(parent, factory, evnt_pnl_state=None, tlm_pnl_state=None, status_bar_state=None, ch_dict=None, config=None)

   Bases: :class:`fprime_gds.wxgui.src.GDSMainFrameGUI.MainFrame`

   Implementation of the main frame of the GDS which holds all of the different tabs

   .. method:: __del__(self)



   .. method:: updateStatusBar(self)


      Called every second to update teh values shown on the status bar at the bottom of the window


   .. method:: updateBytesRecv(self, num)


      Add to the number of bytes recieved

      :param num {int} -- number of bytes to add to the count:


   .. method:: updateBytesSent(self, num)


      Add to the number of bytes sent

      :param num {int} -- number of bytes to add to the count:


   .. method:: on_recv(self, data)


      Called when data is recieved over the TCP server. This callback is only here to get the length of the recvd data.

      :param data {bin} -- binary data list recieved:


   .. method:: send(self, data, dest)


      Called when data is sent from the command encoder to the TCP client. Only here so we can get the length of what is sent.

      :param data {bin} -- binary data list recieved:
      :param dest {string} -- destination string needed to creat the full binary string sent:


   .. method:: onMainFrameClose(self, event)



   .. method:: onNewMenuItemClick(self, event)



   .. method:: onSaveMenuItemClick(self, event)



   .. method:: onLoadMenuItemClick(self, event)



   .. method:: onAboutMenuItemClick(self, event)



   .. method:: onSaveWinCfgMenuItemClick(self, event)



   .. method:: onRestoreWinMenuItemClick(self, event)



   .. method:: onExitMenuItemClick(self, event)




.. py:class:: GDSStatusBar(parent)

   Bases: :class:`wx.StatusBar`

   Custom wxStatusBar implementation that allows us to draw the status light/circle on the bar

   .. method:: onPaint(self, event)


      Called when the status bar is redrawn (Refresh() is called on it)


   .. method:: get_state(self)


      Get the current state of the status bar

      :returns: tuple -- (number of bytes recved, number of bytes sent)


   .. method:: set_state(self, state)


      Set the state of the status bar

      :param state {tuple} --:
      :type state {tuple} --: number of bytes recved, number of bytes sent



