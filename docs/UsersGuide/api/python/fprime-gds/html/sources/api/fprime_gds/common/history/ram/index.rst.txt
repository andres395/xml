:mod:`fprime_gds.common.history.ram`
====================================

.. py:module:: fprime_gds.common.history.ram

.. autoapi-nested-parse::

   ram.py:

   A simple implementation of of a history that maintains items in RAM. This is used for simplicity, but isn't exactly
   robust nor persistent. Given that it is in thr RAM, it is driven from the the decoders object, which should run off the
   middle-ware layer.

   Note: this RAM history treats "start times" as session tokens to remember where it was last fetched from.

   :author: lestarch



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   fprime_gds.common.history.ram.RamHistory



.. py:class:: RamHistory

   Bases: :class:`fprime_gds.common.history.history.History`

   Chronological variant of history.  This is intended to be registered with the decoders in order
   to handle incoming objects, and store them for retrieval.

   .. method:: data_callback(self, data, sender=None)


      Data callback to store

      :param data: object to store


   .. method:: retrieve(self, start=None)


      Retrieve objects from this history. 'start' is the session token for retrieving new elements. If session is not
      specified, all elements are retrieved. If session is specified, then unseen elements are returned. If the
      session itself is new, it is recorded and set to the newest data.

      :param start: return all objects newer than given start session key
      :return: a list of objects


   .. method:: retrieve_new(self)


      Retrieves a chronological order of objects that haven't been accessed through retrieve or
      retrieve_new before.

      :returns: a list of objects in chronological order


   .. method:: clear(self, start=None)


      Clears objects from RamHistory. It clears upto the earliest session. If session is supplied, the session id will
      be deleted as well.

      :param start: a position in the history's order (int).


   .. method:: size(self)


      Accessor for the number of objects in the history
      :returns: the number of objects (int)



