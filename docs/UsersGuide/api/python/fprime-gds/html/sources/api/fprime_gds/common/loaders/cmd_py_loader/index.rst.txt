:mod:`fprime_gds.common.loaders.cmd_py_loader`
==============================================

.. py:module:: fprime_gds.common.loaders.cmd_py_loader

.. autoapi-nested-parse::

   @brief Loader class for importing python based command dictionaries

   @date Created July 9, 2018
   @author R. Joseph Paetz

   @bug No known bugs



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   fprime_gds.common.loaders.cmd_py_loader.CmdPyLoader



.. py:class:: CmdPyLoader

   Bases: :class:`fprime_gds.common.loaders.python_loader.PythonLoader`

   Class to load python based command dictionaries

   .. attribute:: COMPONENT_FIELD
      :annotation: = COMPONENT

      

   .. attribute:: MNEMONIC_FIELD
      :annotation: = MNEMONIC

      

   .. attribute:: OP_CODE_FIELD
      :annotation: = OP_CODE

      

   .. attribute:: DESC_FIELD
      :annotation: = CMD_DESCRIPTION

      

   .. attribute:: ARGS_FIELD
      :annotation: = ARGUMENTS

      

   .. method:: construct_dicts(self, path)


      Constructs and returns python dictionaries keyed on id and name

      This function should not be called directly, instead use
      get_id_dict(path) and get_name_dict(path) defined in the base Loader
      class. For the command dictionary, the op_code is treated as the ID and
      the command mnemonic is treated as the name.

      :param path: Path to the python module file dictionary to convert. This
                   should be a directory. If using a regular fprime deployment,
                   this should be a path to the events dictionary in your
                   generated folder:
                   ${GENERATED_FOLDER_LOCATION}/generated/${DEPLOYMENT}/events

      :returns: (id_dict, name_dict). They should have keys of the id and name
                fields respectively and the values for both should be event_template
                objects.
      :rtype: A tuple with two event dictionaries (python type dict)



