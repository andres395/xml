:mod:`fprime_gds.common.pipeline.router`
========================================

.. py:module:: fprime_gds.common.pipeline.router

.. autoapi-nested-parse::

   router.py:

   Sets up a router object to handle incoming and outgoing messages adding in handshake token to the front of the message
   that can then be sent back as a handshake packet. This router will allow returning handshake callback end up at the
   originating object correctly.

   @author mstarch



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   fprime_gds.common.pipeline.router.OutgoingRouter
   fprime_gds.common.pipeline.router.IncomingRouter



.. py:class:: OutgoingRouter

   Bases: :class:`fprime_gds.common.handlers.DataHandler`, :class:`fprime_gds.common.handlers.HandlerRegistrar`

   Handshake router that inspects the originating caller and notes it in a table. This table can then be consulted when
   the data returns for sending handshakes back to the originating object.

   .. method:: data_callback(self, data, sender=None)


      Handles incoming data by stamping on a handshake token to be passed back in the handshake packet. This reads
      from the sender parameter to creat this token, otherwise "0000" is sent out.

      :param data: encoded data to be prepended to
      :param sender: sender to append to.



.. py:class:: IncomingRouter

   Bases: :class:`fprime_gds.common.handlers.DataHandler`, :class:`fprime_gds.common.handlers.HandlerRegistrar`

   Handshake router that inspects the returning handshake packet, and routes back to the originating object found in
   the outgoing router.

   .. method:: data_callback(self, data, sender=None)


      Handles incoming data by stamping on a handshake token to be passed back in the handshake packet. This reads
      from the sender parameter to creat this token, otherwise "0000" is sent out.

      :param data: encoded data to be prepended to
      :param sender: sender id to append to.



