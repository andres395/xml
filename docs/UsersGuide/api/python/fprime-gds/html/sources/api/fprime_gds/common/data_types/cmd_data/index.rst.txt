:mod:`fprime_gds.common.data_types.cmd_data`
============================================

.. py:module:: fprime_gds.common.data_types.cmd_data

.. autoapi-nested-parse::

   @brief Command Data class

   Instances of this class define a specific instance of a command with specific
   argument values.

   @data Created July 3, 2018
   @author Josef Biberstein

   @bug No known bugs



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   fprime_gds.common.data_types.cmd_data.CmdData



.. py:class:: CmdData(cmd_args, cmd_temp, cmd_time=None)

   Bases: :class:`fprime_gds.common.data_types.sys_data.SysData`

   The CmdData class stores a specific command

   .. method:: get_template(self)


      Get the template class associate with this specific data object

      :returns: Template -- The template class for this data object


   .. method:: get_id(self)


      Get the ID associate with the template of this data object

      :returns: An ID number


   .. method:: get_arg_vals(self)


      Get the values for each argument in a command.

      :returns: list -- a list of value objects that were used in this data object.


   .. method:: get_args(self)


      Get the arguments associate with the template of this data object

      :returns: list -- A list of type objects representing the arguments of the template of this data object (in order)


   .. method:: get_str(self, time_zone=None, verbose=False, csv=False)


      Convert the command data to a string

      :param time_zone: (tzinfo, default=None) Timezone to print time in. If
                        time_zone=None, use local time.
      :param verbose: (boolean, default=False) Prints extra fields if True
      :param csv: (boolean, default=False) Prints each field with commas between
                  if true

      :returns: String version of the command data


   .. method:: convert_arg_value(self, arg_val, arg_type)



   .. method:: __str__(self)


      Return str(self).



.. py:exception:: CommandArgumentException

   Bases: :class:`Exception`

   Common base class for all non-exit exceptions.


.. py:exception:: CommandArgumentsException(errors)

   Bases: :class:`Exception`

   Common base class for all non-exit exceptions.


