:mod:`fprime_gds.flask.updown`
==============================

.. py:module:: fprime_gds.flask.updown

.. autoapi-nested-parse::

   flask/updown.py:

   A simple service that handles file uploads and downloads. This allowd the REST api to show the status of file uplinks
   and downlinks. In addition, an uplink destination directory is exposed for the UI to set where new uploads should be
   uplinked to.

   @author mstarch



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   fprime_gds.flask.updown.Destination
   fprime_gds.flask.updown.FileUploads
   fprime_gds.flask.updown.FileDownload



.. py:class:: Destination(uplinker)

   Bases: :class:`flask_restful.Resource`

   A data model for the current location of the destination of uplinked files.

   .. method:: get(self)


      Gets the current destination

      :return: current destination


   .. method:: put(self)


      Updates the current destination directory



.. py:class:: FileUploads(uplinker, uplink_set)

   Bases: :class:`flask_restful.Resource`

   A data model for the current uplinking file set.

   .. method:: get(self)


      Gets the current set of files

      :return: current uplinking files


   .. method:: put(self)


      Handles an update to an existing source file.  Source and action are expected parameters to be supplied. If
      source is None, then "pause-all" or "unpause-all" should be supplied to globally pause the uplinker.


   .. method:: post(self)


      Adds file(s) to be uplinked by enqueuing each into the uplinker.



.. py:class:: FileDownload(downlinker)

   Bases: :class:`flask_restful.Resource`

   .. method:: get(self, source=None)


      Gets the current downlinking files

      :return: current downlinking files



