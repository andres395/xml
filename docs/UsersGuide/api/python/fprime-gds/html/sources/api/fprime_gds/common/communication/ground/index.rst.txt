:mod:`fprime_gds.common.communication.ground`
=============================================

.. py:module:: fprime_gds.common.communication.ground

.. autoapi-nested-parse::

   ground.py:

   Sets up the ground-side handlers for the comm layer. This allows the communications layer to send data and receive data
   to and from the rest of the ground system. This layer consists of an Abstract base class, which guarantees the methods
   available to to the comm layer, and currently a single implementation used to attach to the ThreadedTcpServer.

   @author lestarch



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   fprime_gds.common.communication.ground.GroundHandler
   fprime_gds.common.communication.ground.TCPGround



.. data:: LOGGER
   

   

.. py:class:: GroundHandler

   Bases: :class:`abc.ABC`

   Ground handler class interacts upstream from the comm adapter layer to the the greater ground system. This
   effectively means handling the following functions:

   1. receive_all: receives any and all frames from the ground layer for uplink to the spacecraft
   2. send_all: sends any and all frames to the ground system from the spacecraft's downlink

   .. method:: open(self)
      :abstractmethod:


      Opens any needed resources and prepares the system for receiving and sending.


   .. method:: receive_all(self)
      :abstractmethod:


      Receive all packet available from the ground layer. This will return full ground packets up to the uplinker.
      These packets should be fully-deframed and ready for reframing in the comm-layer specified format.

      :return: list deframed packets


   .. method:: send_all(self, frames)
      :abstractmethod:


      Receive all packet available from the ground layer. This will return full ground packets up to the uplinker.
      These packets should be fully-deframed and ready for reframing in the comm-layer specified format.

      :return: list deframed packets



.. py:class:: TCPGround(address='127.0.0.1', port=50050)

   Bases: :class:`fprime_gds.common.communication.ground.GroundHandler`

   Interface class defining necessary functions to talk to the GDS.

   .. method:: open(self)


      Opens any needed resources and prepares the system for receiving and sending. This means opening the TCP handler
      and sending out the initial register command to the TcpServer.


   .. method:: close(self)


      Closes the open adapter.


   .. method:: receive_all(self)


      Receive all packet available from the ground layer. This will return full ground packets up to the uplinker.
      These packets should be fully-deframed and ready for reframing in the comm-layer specified format.

      :return: list deframed packets


   .. method:: send_all(self, frames)


      Send all packets out to the tcp socket server. This adds the framing data for the TCP Server.

      :param packet: bytes object of data to write out to the socket server



